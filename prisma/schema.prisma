generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Character {
  id      String  @id @default(uuid())
  name    String  @db.VarChar(20)
  history String?
  age     Int?
  health  Int?    @default(100)
  stamina Int?    @default(100)
  mana    Int?    @default(100)
  idRace  String
  idClass String
  race    Race    @relation(fields: [idRace], references: [id], onDelete: Cascade)
  class   Class   @relation(fields: [idClass], references: [id], onDelete: Cascade)
}

model Race {
  id          String        @id @default(uuid())
  key         String        @db.VarChar(20)
  name        String        @db.VarChar(20)
  modHealth   Int
  modStamina  Int
  modMana     Int
  character   Character[]
  raceAttrMod RaceAttrMod[]
}

model RaceAttrMod {
  race        Race      @relation(fields: [idRace], references: [id])
  idRace      String
  attribute   Attribute @relation(fields: [idAttribute], references: [id])
  idAttribute String
  value       Int

  @@id([idRace, idAttribute])
}

model Attribute {
  id          String        @id @default(uuid())
  key         String        @db.VarChar(20)
  name        String        @db.VarChar(20)
  value       Int?          @default(20)
  raceAttrMod RaceAttrMod[]
}

model Class {
  id            String          @id @default(uuid())
  name          String          @db.VarChar(20)
  key           String          @db.VarChar(20)
  description   String?
  character     Character[]
  classSkillMod ClassSkillMod[]
}

model ClassSkillMod {
  skill   Skill  @relation(fields: [idSkill], references: [id])
  idSkill String
  class   Class  @relation(fields: [idClass], references: [id])
  idClass String
  value   Int

  @@id([idSkill, idClass])
}

model Skill {
  id    String @id @default(uuid())
  name  String @db.VarChar(20)
  key   String @db.VarChar(20)
  value Int?   @default(10)

  classSkillMod ClassSkillMod[]
}
